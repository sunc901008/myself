plugins {
    id 'java'
    id 'application'
    id 'idea'
    id "org.hidetake.ssh" version "2.2.0"
}

version = '1.4'

mainClassName = 'io.vertx.core.Launcher'
if (project.hasProperty("mainClass")) {
    mainClassName = mainClass
}

processResources {
    exclude { "src/main/resources/*" }
}

applicationDistribution.from("index_supervisor.conf") {
    into ""
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-core
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '6.5.0'

    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-queryparser
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '6.5.0'

    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-codecs
    compile group: 'org.apache.lucene', name: 'lucene-codecs', version: '6.5.0'

    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-queryparser
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '6.5.0'

    compile "mysql:mysql-connector-java:5.1.38"
    compile "com.alibaba:druid:1.0.7"

    compile "io.vertx:vertx-core:3.2.1"
    compile "io.vertx:vertx-web:3.2.1"

    // https://mvnrepository.com/artifact/org.apache.hive/hive-jdbc
    compile group: 'org.apache.hive', name: 'hive-jdbc', version: '2.1.1'

}

def REMOTE_TARGET = '/srv/focus/index'    //服务器项目存储目录

ext.sshHost = "192.168.0.91"
ext.sshUser = "wangwa"
ext.sshSudoPassword = "test@wangwa"

remotes {
    webServer {
        host = sshHost
        user = sshUser
    }
}

task setup(dependsOn: distTar) {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                execute "mkdir -p " + REMOTE_TARGET + "/packages"
                println("mkdir -p " + REMOTE_TARGET + "/packages success")
                execute "mkdir -p " + REMOTE_TARGET + "/project"
                println("mkdir -p " + REMOTE_TARGET + "/project success")
                execute "rm -rf " + REMOTE_TARGET + "/project/*"
                println("rm -rf " + REMOTE_TARGET + "/project/* success")
                put from: 'build/distributions/' + distributionTar, into: REMOTE_TARGET + "/packages/"    //本地文件上传到服务器
                println('build/distributions/' + distributionTar + " success")
                execute "tar --overwrite --strip-components=1 -x -f $REMOTE_TARGET/packages/" + distributionTar + " -C $REMOTE_TARGET/project"
                println("tar --overwrite --strip-components=1 -x -f $REMOTE_TARGET/packages/" + distributionTar + " -C $REMOTE_TARGET/project success")
                execute "rm -f /srv/supervisord.d/index_supervisor.conf"
                println("rm -f /srv/supervisord.d/index_supervisor.conf success")
                execute "ln -s /srv/uc/project/etc/index_supervisor.conf /srv/supervisord.d/index_supervisor.conf"
                println("ln -s /srv/uc/project/etc/index_supervisor.conf /srv/supervisord.d/index_supervisor.conf success")
            }
        }
    }
}

task deploy(dependsOn: setup) {
    doLast {
        ssh.run {
            settings {
                sudoPassword = sshSudoPassword
                pty = true
            }
            session(remotes.webServer) {
                executeSudo "supervisorctl stop index"
                executeSudo "supervisorctl update"
                executeSudo "supervisorctl start index"
            }
        }
    }
}
